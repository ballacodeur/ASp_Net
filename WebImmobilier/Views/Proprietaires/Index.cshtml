@model PagedList.IPagedList<WebImmobilier.Models.Proprietaire>
@using PagedList.Mvc

@using WebImmobilier.Models

@{
    ViewBag.Title = "Liste des propriètaire";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Les Proprietaires</h2>

<p>
    @Html.ActionLink(ResourceImmo.Nouveau ,"Create", null, new { @class = "btn btn-primary" })
</p>
<table class="table table-striped">
    <tr class="thead-dark">
        <th class="">
            #
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NomUser)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PrenomUser)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Login)
        </th>
        <th>
            Action
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IdUser)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NomUser)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrenomUser)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Login)
            </td>

            <td>
                <div class="btn-group" role="group">
                    @Html.ActionLink("Modifier", "Edit", new { id = item.IdUser }, new { @class = "btn btn-primary" })
                    @Html.ActionLink("Détails", "Details", new { id = item.IdUser }, new { @class = "btn btn-info" })
                    @Html.ActionLink("Supprimer", "Delete", new { id = item.IdUser }, new { @class = "btn btn-danger" })
                </div>
            </td>
        </tr>
    }
</table>

@{
    int pageCount = Model.PageCount;
    int currentPage = Model.PageNumber;
    string actionUrl = Url.Action("Index", new { page = "" });
}

<nav>
    <ul class="pagination pagination-circle">
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = 1 })">Prem</a>
        </li>
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })">Préc</a>
        </li>
        @for (int i = 1; i <= pageCount; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }
        <li class="page-item @(currentPage == pageCount ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })">Suiv</a>
        </li>
        <li class="page-item @(currentPage == pageCount ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = pageCount })">Der</a>
        </li>
    </ul>
</nav>

@*@Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast, new
{
    ulClassName = "pagination",
    liClassName = "page-item",
    aClassName = "page-link"
})*@